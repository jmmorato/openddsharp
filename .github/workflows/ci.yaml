name: Continuous Integration

on: [push]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:        
        BuildPlatform: [x64, x86]
        BuildConfiguration: [Release, Debug]
    env:
      OpenDdsVersion: "3.14.1"
        
    steps:
    - uses: actions/checkout@v2

    - name: Cache OpenDDS libraries
      id: opendds-libraries
      uses: actions/cache@v2
      with:
        path: |          
          '**/ext/**/*.dll'
          '**/ext/**/*.lib'
          '**/ext/**/*.exe'
          '**/ext/OpenDDS/dds/idl/IDLTemplate.txt'          
          '**/ext/**/*.h'
          '**/ext/**/*.cpp'
          '**/ext/**/*.inl'
          '**/ext/**/*.idl'
          '**/ext/**/*.pidl'          
        key: opendds-cache-${{ env.OpenDdsVersion }}-${{ matrix.BuildConfiguration }}-${{ matrix.BuildPlatform }}-4

    - name: Build & Test with Cake (OpenDDS cache found)
      shell: pwsh
      if: steps.opendds-libraries.outputs.cache-hit == 'true'
      run: ${{ github.workspace }}/Build/OpenDDSharp.Build.CppCli.ps1 --BuildConfiguration=${{ matrix.BuildConfiguration }} --BuildPlatform=${{ matrix.BuildPlatform }} --OpenDdsVersion=${{ env.OpenDdsVersion }} --IgnoreThirdPartySetup
      working-directory: ${{ github.workspace }}/Build

    - name: Build & Test with Cake (OpenDDS cache not found)
      shell: pwsh
      if: steps.opendds-libraries.outputs.cache-hit != 'true'
      run: ${{ github.workspace }}/Build/OpenDDSharp.Build.CppCli.ps1 --BuildConfiguration=${{ matrix.BuildConfiguration }} --BuildPlatform=${{ matrix.BuildPlatform }} --OpenDdsVersion=${{ env.OpenDdsVersion }}
      working-directory: ${{ github.workspace }}/Build
