#include "TestInclude.idl"

module JsonWrapper {

	enum SupportTestKind {
		InconsistentTopicTest,
		PublicationDisconnectedTest,
		PublicationLostTest,
		PublicationReconnectedTest,
		SubscriptionDisconnectedTest,
		SubscriptionLostTest,
		SubscriptionReconnectedTest
	};

	const short TEST_SHORT_CONST = -1;
	const unsigned short TEST_USHORT_CONST = 1;
	const long TEST_LONG_CONST = -2;
	const unsigned long TEST_ULONG_CONST = 2;
	const long long TEST_LONGLONG_CONST = -3;
	const unsigned long long TEST_ULONGLONG_CONST = 3;
	const float TEST_FLOAT_CONST = 4.1;
	const double TEST_DOUBLE_CONST = 5.1;
	const char TEST_CHAR_CONST = 'X';
	const wchar TEST_WCHAR_CONST = 'S';
	const octet TEST_OCTET_CONST = 0x42;
	const boolean TEST_BOOLEAN_CONST = 1;
	const string TEST_STRING_CONST = "Hello, I love you, won't you tell me your name?";
	const wstring TEST_WSTRING_CONST = L"Hello, I love you, won't you tell me your name?";

	typedef string<32> BoundedStringType;
	typedef wstring<32> BoundedWStringType;

	typedef sequence<boolean> UnboundedBooleanSequenceType;
	typedef sequence<boolean, 5> BoundedBooleanSequenceType;
	typedef sequence<char> UnboundedCharSequenceType;
	typedef sequence<char, 5> BoundedCharSequenceType;
	typedef sequence<wchar> UnboundedWCharSequenceType;
	typedef sequence<wchar, 5> BoundedWCharSequenceType;
	typedef sequence<octet> UnboundedOctetSequenceType;
	typedef sequence<octet, 5> BoundedOctetSequenceType;
	typedef sequence<short> UnboundedShortSequenceType;
	typedef sequence<short, 5> BoundedShortSequenceType;
	typedef sequence<unsigned short> UnboundedUShortSequenceType;
	typedef sequence<unsigned short, 5> BoundedUShortSequenceType;
	typedef sequence<long> UnboundedLongSequenceType;
	typedef sequence<long, 5> BoundedLongSequenceType;
	typedef sequence<unsigned long> UnboundedULongSequenceType;
	typedef sequence<unsigned long, 5> BoundedULongSequenceType;
	typedef sequence<long long> UnboundedLongLongSequenceType;
	typedef sequence<long long, 5> BoundedLongLongSequenceType;
	typedef sequence<unsigned long long> UnboundedULongLongSequenceType;
	typedef sequence<unsigned long long, 5> BoundedULongLongSequenceType;
	typedef sequence<float> UnboundedFloatSequenceType;
	typedef sequence<float, 5> BoundedFloatSequenceType;
	typedef sequence<double> UnboundedDoubleSequenceType;
	typedef sequence<double, 5> BoundedDoubleSequenceType;
//	typedef sequence<long double> UnboundedLongDoubleSequenceType;
//	typedef sequence<long double, 5> BoundedLongDoubleSequenceType;
	typedef sequence<int8> UnboundedInt8SequenceType;
    typedef sequence<int8, 5> BoundedInt8SequenceType;
    typedef sequence<uint8> UnboundedUInt8SequenceType;
    typedef sequence<uint8, 5> BoundedUInt8SequenceType;

	typedef sequence<string> UnboundedStringSequenceType;
	typedef sequence<string, 5> BoundedStringSequenceType;
	typedef sequence<wstring> UnboundedWStringSequenceType;
	typedef sequence<wstring, 5> BoundedWStringSequenceType;

	typedef short ShortArrayType[5];
	typedef unsigned short UnsignedShortArrayType[5];
	typedef long LongArrayType[5];
	typedef unsigned long UnsignedLongArrayType[5];
	typedef long long LongLongArrayType[5];
	typedef unsigned long long UnsignedLongLongArrayType[5];

	typedef char CharArrayType[5];
	typedef wchar WCharArrayType[5];
	typedef boolean BooleanArrayType[5];
	typedef octet OctetArrayType[5];
	typedef float FloatArrayType[5];
	typedef double DoubleArrayType[5];
//	typedef long double LongDoubleArrayType[5];
	typedef int8 Int8ArrayType[5];
	typedef uint8 UInt8ArrayType[5];

	typedef string StringArrayType[5];
	typedef wstring WStringArrayType[5];

	typedef short ShortMultiArrayType[3][4][2];
	typedef unsigned short UnsignedShortMultiArrayType[3][4][2];
	typedef long LongMultiArrayType[3][4][2];
	typedef unsigned long UnsignedLongMultiArrayType[3][4][2];
	typedef long long LongLongMultiArrayType[3][4][2];
	typedef unsigned long long UnsignedLongLongMultiArrayType[3][4][2];
	typedef char CharMultiArrayType[3][4][2];
	typedef wchar WCharMultiArrayType[3][4][2];
	typedef boolean BooleanMultiArrayType[3][4][2];
	typedef octet OctetMultiArrayType[3][4][2];
	typedef float FloatMultiArrayType[3][4][2];
	typedef double DoubleMultiArrayType[3][4][2];
//	typedef long double LongDoubleMultiArrayType[3][4][2];
	typedef int8 Int8MultiArrayType[3][4][2];
	typedef uint8 UInt8MultiArrayType[3][4][2];

	typedef string StringMultiArrayType[3][4][2];
	typedef wstring WStringMultiArrayType[3][4][2];

	typedef sequence<octet, 2048> OctetSequenceType;

	@topic
	struct NestedStruct {
		long Id;
		string Message;
	};

	typedef sequence<NestedStruct> UnboundedStructSequenceType;
	typedef sequence<NestedStruct, 5> BoundedStructSequenceType;

	typedef NestedStruct StructArrayType[5];

	typedef NestedStruct StructMultiArrayType[3][4][2];

	enum TestEnum {
		ENUM1,
		ENUM2,
		ENUM3,
		ENUM4,
		ENUM5,
		ENUM6,
		ENUM7,
		ENUM8,
		ENUM9,
		ENUM10,
		ENUM11,
		ENUM12
	};

	typedef sequence<TestEnum> UnboundedEnumSequenceType;
	typedef sequence<TestEnum, 5> BoundedEnumSequenceType;

	const TestEnum TEST_ENUM_CONST = TestEnum::ENUM6;

	typedef TestEnum EnumArrayType[5];

    typedef TestEnum EnumMultiArrayType[3][4][2];

	@topic
	struct TestInclude {
	    @key string Id;
	    JsonWrapperInclude::IncludeStruct IncludeField;
	};

	@topic
    struct TestStruct {
		@key long Id;
        short ShortField;
        unsigned short UnsignedShortField;
        long LongField;
        unsigned long UnsignedLongField;
        long long LongLongField;
        unsigned long long UnsignedLongLongField;
		char CharField;
		wchar WCharField;
		boolean BooleanField;
		octet OctetField;
		float FloatField;
		double DoubleField;
		int8 Int8Field;
        uint8 UInt8Field;

		string UnboundedStringField;
		wstring UnboundedWStringField;
		BoundedStringType BoundedStringField;
		BoundedWStringType BoundedWStringField;

		UnboundedBooleanSequenceType UnboundedBooleanSequenceField;
		UnboundedCharSequenceType UnboundedCharSequenceField;
		UnboundedWCharSequenceType UnboundedWCharSequenceField;
		UnboundedOctetSequenceType UnboundedOctetSequenceField;
		UnboundedShortSequenceType UnboundedShortSequenceField;
		UnboundedUShortSequenceType UnboundedUShortSequenceField;
		UnboundedLongSequenceType UnboundedLongSequenceField;
		UnboundedULongSequenceType UnboundedULongSequenceField;
		UnboundedLongLongSequenceType UnboundedLongLongSequenceField;
		UnboundedULongLongSequenceType UnboundedULongLongSequenceField;
		UnboundedFloatSequenceType UnboundedFloatSequenceField;
		UnboundedDoubleSequenceType UnboundedDoubleSequenceField;
		UnboundedStringSequenceType UnboundedStringSequenceField;
		UnboundedWStringSequenceType UnboundedWStringSequenceField;
		UnboundedInt8SequenceType UnboundedInt8SequenceField;
        UnboundedUInt8SequenceType UnboundedUInt8SequenceField;

		NestedStruct NestedStructField;
		UnboundedStructSequenceType UnboundedStructSequenceField;

		TestEnum TestEnumField;
		UnboundedEnumSequenceType UnboundedEnumSequenceField;

		ShortArrayType ShortArrayField;
		UnsignedShortArrayType UnsignedShortArrayField;
		LongArrayType LongArrayField;
		UnsignedLongArrayType UnsignedLongArrayField;
		LongLongArrayType LongLongArrayField;
		UnsignedLongLongArrayType UnsignedLongLongArrayField;
		CharArrayType CharArrayField;
		WCharArrayType WCharArrayField;
		BooleanArrayType BooleanArrayField;
		OctetArrayType OctetArrayField;
		FloatArrayType FloatArrayField;
		DoubleArrayType DoubleArrayField;
		Int8ArrayType Int8ArrayField;
		UInt8ArrayType UInt8ArrayField;

		StringArrayType StringArrayField;
		WStringArrayType WStringArrayField;

		StructArrayType StructArrayField;
		EnumArrayType EnumArrayField;

		BoundedBooleanSequenceType BoundedBooleanSequenceField;
		BoundedCharSequenceType BoundedCharSequenceField;
		BoundedWCharSequenceType BoundedWCharSequenceField;
		BoundedOctetSequenceType BoundedOctetSequenceField;
		BoundedShortSequenceType BoundedShortSequenceField;
		BoundedUShortSequenceType BoundedUShortSequenceField;
		BoundedLongSequenceType BoundedLongSequenceField;
		BoundedULongSequenceType BoundedULongSequenceField;
		BoundedLongLongSequenceType BoundedLongLongSequenceField;
		BoundedULongLongSequenceType BoundedULongLongSequenceField;
		BoundedFloatSequenceType BoundedFloatSequenceField;
		BoundedDoubleSequenceType BoundedDoubleSequenceField;
		BoundedStringSequenceType BoundedStringSequenceField;
		BoundedWStringSequenceType BoundedWStringSequenceField;
		BoundedStructSequenceType BoundedStructSequenceField;
		BoundedEnumSequenceType BoundedEnumSequenceField;
		BoundedInt8SequenceType BoundedInt8SequenceField;
        BoundedUInt8SequenceType BoundedUInt8SequenceField;

		ShortMultiArrayType ShortMultiArrayField;
		UnsignedShortMultiArrayType UnsignedShortMultiArrayField;
		LongMultiArrayType LongMultiArrayField;
		UnsignedLongMultiArrayType UnsignedLongMultiArrayField;
		LongLongMultiArrayType LongLongMultiArrayField;
		UnsignedLongLongMultiArrayType UnsignedLongLongMultiArrayField;
		CharMultiArrayType CharMultiArrayField;
		WCharMultiArrayType WCharMultiArrayField;
		BooleanMultiArrayType BooleanMultiArrayField;
		OctetMultiArrayType OctetMultiArrayField;
		FloatMultiArrayType FloatMultiArrayField;
		DoubleMultiArrayType DoubleMultiArrayField;
		Int8MultiArrayType Int8MultiArrayField;
		UInt8MultiArrayType UInt8MultiArrayField;

		EnumMultiArrayType EnumMultiArrayField;

		StringMultiArrayType StringMultiArrayField;
		WStringMultiArrayType WStringMultiArrayField;

		StructMultiArrayType StructMultiArrayField;

        // `long double` issues on MacOS ARM64?
        // Or the compiler version used (clang14).
        // SEGV received. Reproducible with OpenDDS HelloWorld test.
        // TO BE REPORTED
//        long double LongDoubleField;
//        UnboundedLongDoubleSequenceType UnboundedLongDoubleSequenceField;
//        BoundedLongDoubleSequenceType BoundedLongDoubleSequenceField;
//        LongDoubleArrayType LongDoubleArrayField;
//		LongDoubleMultiArrayType LongDoubleMultiArrayField;
    };

	@topic
	struct Athlete
	{
		@key long AthleteId;
		string FirstName;
		string SecondName;
		string Country;
	};

	@topic
	struct Result
	{
		@key long AthleteId;
		long Rank;
		float Score;
	};

	@topic
	struct AthleteResult
	{
		@key long AthleteId;
		string FirstName;
		string SecondName;
		string Country;
		long Rank;
		float Score;
	};

    @topic
	struct KeyedOctets {
        @key string<1024> KeyField;
        OctetSequenceType ValueField;
    };
};
