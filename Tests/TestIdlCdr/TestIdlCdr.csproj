<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net6.0;net7.0;net8.0;</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Platforms>x64;x86;ARM64</Platforms>
    <Configurations>Debug;Release</Configurations>
    <!--  VS doesn't call MSBuild to check if projects are up-to-date and it doesn't check the inputs of custom target.
     The following tag disable its custom logic and use MSBuild logic. https://stackoverflow.com/a/13414681/3021815 -->
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
    <IsLinux Condition="$([MSBuild]::IsOSPlatform('Linux'))">true</IsLinux>
    <IsOSX Condition="$([MSBuild]::IsOSPlatform('OSX'))">true</IsOSX>
    <IsARM64 Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">true</IsARM64>
    <IsX64 Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">true</IsX64>
    <RuntimeIdentifiers>win-x64;win-x86;linux-x64;osx-x64;osx-arm64;</RuntimeIdentifiers>
    <RootNamespace>TestIdlCdr</RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(RuntimeIdentifier)'=='win-x64' Or '$(Platform)'=='x64'">
	<PlatformFolder>x64</PlatformFolder>
  </PropertyGroup>
  <PropertyGroup Condition="'$(RuntimeIdentifier)'=='win-x86' Or '$(Platform)'=='x86'">
	<PlatformFolder>x86</PlatformFolder>
  </PropertyGroup>

  <PropertyGroup>
	<DefineConstants Condition="'$(IsWindows)'=='true'">$(DefineConstants);Windows</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
	<DefineConstants Condition="'$(IsLinux)'=='true'">$(DefineConstants);Linux</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
	<DefineConstants Condition="'$(IsOSX)'=='true'">$(DefineConstants);OSX</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition="'$(IsARM64)'=='true'">$(DefineConstants);ARM64</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition="'$(IsX64)'=='true'">$(DefineConstants);X64</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition="'$(IsARM64)'=='true'">$(DefineConstants);ARM64</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <DefineConstants Condition="'$(IsX64)'=='true'">$(DefineConstants);X64</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <IdlFiles Include="IDL\*.idl" />
  </ItemGroup>

  <PropertyGroup Label="OpenDDS Home" Condition="'$(IsWindows)'=='true'">
    <DDS_ROOT>$(MSBuildThisFileDirectory)..\..\ext\OpenDDS_$(PlatformFolder)</DDS_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="ACE Home" Condition="'$(IsWindows)'=='true'">
    <ACE_ROOT>$(MSBuildThisFileDirectory)..\..\ext\OpenDDS_$(PlatformFolder)\ACE_wrappers</ACE_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="TAO Home" Condition="'$(IsWindows)'=='true'">
    <TAO_ROOT>$(MSBuildThisFileDirectory)..\..\ext\OpenDDS_$(PlatformFolder)\ACE_wrappers\TAO</TAO_ROOT>
  </PropertyGroup>

  <PropertyGroup Label="OpenDDS Home" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'">
    <DDS_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-x64</DDS_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="ACE Home" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'">
    <ACE_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-x64/ACE_wrappers</ACE_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="TAO Home" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'">
    <TAO_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-x64/ACE_wrappers/TAO</TAO_ROOT>
  </PropertyGroup>

  <PropertyGroup Label="OpenDDS Home" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'">
    <DDS_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-arm64</DDS_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="ACE Home" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'">
    <ACE_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-arm64/ACE_wrappers</ACE_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="TAO Home" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'">
    <TAO_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_osx-arm64/ACE_wrappers/TAO</TAO_ROOT>
  </PropertyGroup>

  <PropertyGroup Label="OpenDDS Home" Condition="'$(IsLinux)'=='true'">
    <DDS_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_Linux</DDS_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="ACE Home" Condition="'$(IsLinux)'=='true'">
    <ACE_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_Linux/ACE_wrappers</ACE_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="TAO Home" Condition="'$(IsLinux)'=='true'">
    <TAO_ROOT>$(MSBuildThisFileDirectory)../../ext/OpenDDS_Linux/ACE_wrappers/TAO</TAO_ROOT>
  </PropertyGroup>
  <PropertyGroup Label="Library Path" Condition="'$(IsLinux)'=='true'">
    <LD_LIBRARY_PATH>$(DDS_ROOT)/lib:$(ACE_ROOT)/lib</LD_LIBRARY_PATH>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <ItemGroup>
	<ProjectReference Include="..\..\Sources\OpenDDSharp.Marshaller\OpenDDSharp.Marshaller.csproj" />
	<ProjectReference Include="..\..\Sources\OpenDDSharp\OpenDDSharp.csproj" />
  </ItemGroup>

  <ItemGroup>
    <IdlTemplates Include="..\..\Native\CSharpCDRImplTemplate.txt">
      <Visible>false</Visible>
      <Link>Native\CSharpCDRImplTemplate.txt</Link>
    </IdlTemplates>
    <IdlTemplates Include="..\..\Native\CSharpStructImplTemplate.txt;..\..\Native\CSharpCdrImplTemplate.txt;..\..\Native\CWrapperHeaderTemplate.txt;..\..\Native\CWrapperImplTemplate.txt" Visible="false" />
  </ItemGroup>

  <!-- Ensure templates are copied for code generation-->
  <Target Name="CopyCodeGeneratorTemplates" BeforeTargets="PreBuildEvent">
    <Message Text="Copying code generation templates to OpenDDS" Importance="High" />
	<Copy SourceFiles="@(IdlTemplates)" DestinationFolder="$(DDS_ROOT)\dds\idl" OverwriteReadOnlyFiles="true" />
  </Target>

  <!-- Clean up generated code before rebuild -->
  <PropertyGroup>
    <CleanDependsOn>CustomBeforeClean;$(CleanDependsOn);</CleanDependsOn>
  </PropertyGroup>
  <Target Name="CustomBeforeClean" Inputs="@(IdlFiles)" Outputs="AlwaysExecuteDummy">
    <Message Text="Cleaning %(IdlFiles.FileName).idl auto-generated files..." Importance="High" />
    <Delete Files="%(RootDir)%(Directory)..\%(IdlFiles.FileName)TypeSupport.cs;" ContinueOnError="true" />
    <RemoveDir Directories="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))NativeProject" />
  </Target>

  <!-- Add VC++ to the PATH -->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.AddPathVC" AssemblyFile="$(MSBuildThisFileDirectory)..\..\Sources\OpenDDSharp.BuildTasks\bin\$(Configuration)\$(TargetFramework)\OpenDDSharp.BuildTasks.dll" />
  <Target Name="AddPathVCTarget" BeforeTargets="PreBuildEvent" Condition="'$(IsWindows)'=='true'">
    <Message Text="Add Visual C++ to the PATH..." Importance="High" />
    <AddPathVC Platform="$(PlatformFolder)" />
  </Target>

  <!-- Set OpenDDS environment variables -->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.SetEnvVar" AssemblyFile="$(MSBuildThisFileDirectory)..\..\Sources\OpenDDSharp.BuildTasks\bin\$(Configuration)\$(TargetFramework)\OpenDDSharp.BuildTasks.dll" />
  <Target Name="SetEnvVarTarget" BeforeTargets="PreBuildEvent">
    <Message Text="Set OpenDDS environment variables:" Importance="High" />
    <Message Text="DDS_ROOT=$(DDS_ROOT)" Importance="High" />
    <Message Text="ACE_ROOT=$(ACE_ROOT)" Importance="High" />
    <Message Text="TAO_ROOT=$(TAO_ROOT)" Importance="High" />
    <SetEnvVar Variable="DDS_ROOT" Value="$(DDS_ROOT)" />
    <SetEnvVar Variable="ACE_ROOT" Value="$(ACE_ROOT)" />
    <SetEnvVar Variable="TAO_ROOT" Value="$(TAO_ROOT)" />
  </Target>

  <!-- Set Linux environment variables -->
  <Target Name="SetEnvVarTargetLinux" BeforeTargets="PreBuildEvent" Condition="'$(IsLinux)'=='true'">
    <Message Text="Set Linux environment variables:" Importance="High" />
    <Message Text="LD_LIBRARY_PATH=$(LD_LIBRARY_PATH)" Importance="High" />
    <SetEnvVar Variable="LD_LIBRARY_PATH" Value="$(LD_LIBRARY_PATH)" />
  </Target>

  <!--Generate native library task-->
  <UsingTask TaskName="OpenDDSharp.BuildTasks.GenerateNativeLibraryTask" AssemblyFile="$(MSBuildThisFileDirectory)..\..\Sources\OpenDDSharp.BuildTasks\bin\$(Configuration)\netstandard2.0\OpenDDSharp.BuildTasks.dll" />
    <Target Name="GenerateNativeLibraryTarget" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\%(filename).idl')">
    <Message Text="Generate native OpenDDS project" Importance="High" />
    <GenerateNativeLibraryTask IntDir="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" OriginalProjectName="$(ProjectName)" IdlFiles="@(IdlFiles)" TemplatePath="$(MSBuildThisFileDirectory)../../Native/" />
  </Target>

  <!--Generate OpenDDSharp Wrapper files-->
  <Target Name="OpenDDSharpIdlWrapperWindows" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\%(filename)TypeSupport.h')" Condition="'$(IsWindows)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) wrapper..." Importance="High" />
    <Exec Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_$(PlatformFolder)/OpenDDSharp.IdlGenerator/$(Configuration)/openddsharp_idl&quot; &quot;%(IdlFiles.Filename).idl&quot; -cwrapper" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlWrapperLinux" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/%(filename)TypeSupport.h')" Condition="'$(IsLinux)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) wrapper..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_Linux/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;%(IdlFiles.Filename).idl&quot; -cwrapper" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlWrapperMacOSX64" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/%(filename)TypeSupport.h')" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) wrapper..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_osx-x64/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;%(IdlFiles.Filename).idl&quot; -cwrapper" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlWrapperMacOSARM64" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/%(filename)TypeSupport.h')" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) wrapper..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_osx-arm64/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;%(IdlFiles.Filename).idl&quot; -cwrapper" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>

  <!--Create cmake-->
  <Target Name="OpenDDSharpCmakeOpenddsx64" BeforeTargets="PreBuildEvent" Condition="'$(PlatformFolder)'=='x64' And '$(IsWindows)'=='true'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\CMakeFiles\CMakeOutput.log')">
    <Message Text="Create native project with cmake..." Importance="High" />
    <Exec Command="cmake -DCMAKE_BUILD_TYPE=$(Configuration) -DCMAKE_PREFIX_PATH=$(DDS_ROOT) -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -A x64 -H$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject')) -B$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpCmakeOpenddsx86" BeforeTargets="PreBuildEvent" Condition="'$(PlatformFolder)'=='x86' And '$(IsWindows)'=='true'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\CMakeFiles\CMakeOutput.log')">
    <Message Text="Create native project with cmake..." Importance="High" />
    <Exec Command="cmake -DCMAKE_BUILD_TYPE=$(Configuration) -DCMAKE_PREFIX_PATH=$(DDS_ROOT) -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -A Win32 -H$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject')) -B$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpCmakeOpenddsLinux" BeforeTargets="PreBuildEvent" Condition="'$(IsLinux)'=='true'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/CMakeFiles/CMakeOutput.log')">
    <Message Text="Create native project with cmake..." Importance="High" />
    <Exec ToolExe="sh" Command="cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(DDS_ROOT) -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -H$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject')) -B$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpCmakeOpenddsOSX64" BeforeTargets="PreBuildEvent" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/CMakeFiles/CMakeOutput.log')">
    <Message Text="Create native project with cmake..." Importance="High" />
    <Exec ToolExe="sh" Command="cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_APPLE_SILICON_PROCESSOR=x86_64 -DCMAKE_PREFIX_PATH=$(DDS_ROOT) -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -H$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject')) -B$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpCmakeOpenddsOSARM64" BeforeTargets="PreBuildEvent" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)../$(IntermediateOutputPath)NativeProject/CMakeFiles/CMakeOutput.log')">
    <Message Text="Create native project with cmake..." Importance="High" />
    <Exec ToolExe="sh" Command="cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_APPLE_SILICON_PROCESSOR=arm64 -DCMAKE_PREFIX_PATH=$(DDS_ROOT) -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -H$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject')) -B$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>

  <!--Build cmake-->
  <Target Name="OpenDDSharpConfigureBuildCmakeWindows" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\$(ProjectName).dll')" Condition="'$(IsWindows)'=='true'">
    <Message Text="Configure cmake project..." Importance="High" />
    <Exec Command="cmake --build . --config $(Configuration)" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpConfigureBuildCmakeLinux" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\lib$(ProjectName).so')" Condition="'$(IsLinux)'=='true'">
    <Message Text="Configure cmake project..." Importance="High" />
    <Exec ToolExe="sh" Command="cmake --build . --config Release" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpConfigureBuildCmakeOSX" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\$(IntermediateOutputPath)NativeProject\lib$(ProjectName).dylib')" Condition="'$(IsOSX)'=='true'">
    <Message Text="Configure cmake project..." Importance="High" />
    <Exec ToolExe="sh" Command="cmake --build . --config Release" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>

  <!--Generate OpenDDSharp IDL files-->
  <Target Name="OpenDDSharpIdlCSharpWindows" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')" Condition="'$(IsWindows)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) code..." Importance="High" />
    <Exec Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_$(PlatformFolder)/OpenDDSharp.IdlGenerator/$(Configuration)/openddsharp_idl&quot; &quot;$(MSBuildThisFileDirectory)%(IdlFiles.Identity)&quot; -csharp_cdr -P$(ProjectName)" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlCSharpLinux" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')" Condition="'$(IsLinux)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) code..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_Linux/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;$(MSBuildThisFileDirectory)%(IdlFiles.Identity)&quot; -csharp_cdr -P$(ProjectName)" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlCSharpMacOSX64" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')" Condition="'$(IsOSX)'=='true' And '$(IsX64)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) code..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_osx-x64/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;$(MSBuildThisFileDirectory)%(IdlFiles.Identity)&quot; -csharp_cdr -P$(ProjectName)" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <Target Name="OpenDDSharpIdlCSharpMacOSARM64" BeforeTargets="PreBuildEvent" Inputs="@(IdlFiles)" Outputs="@(IdlFiles->'%(RootDir)%(Directory)..\%(filename)TypeSupport.cs')" Condition="'$(IsOSX)'=='true' And '$(IsARM64)'=='true'">
    <Message Text="Generating OpenDDSharp %(IdlFiles.Identity) code..." Importance="High" />
    <Exec ToolExe="sh" Command="&quot;$(MSBuildThisFileDirectory)../../Native/build_osx-arm64/OpenDDSharp.IdlGenerator/openddsharp_idl&quot; &quot;$(MSBuildThisFileDirectory)%(IdlFiles.Identity)&quot; -csharp_cdr -P$(ProjectName)" WorkingDirectory="$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)NativeProject'))" IgnoreExitCode="false" ContinueOnError="false" />
  </Target>
  <ItemGroup>
    <CsFiles Include="@(IdlFiles->'$(IntermediateOutputPath)NativeProject/%(filename)TypeSupport.cs')" />
    <Compile Include="@(CsFiles)" Link="%(filename).cs" />
  </ItemGroup>

  <ItemGroup>
	<!-- OpenDDS native Libraries -->
	<NativeWrapperWindows Include="$(IntermediateOutputPath)NativeProject\$(Configuration)\TestIdlCdrWrapper.dll" Visible="false" />
	<ContentWithTargetPath Include="@(NativeWrapperWindows)" Visible="false" Condition="'$(IsWindows)'=='true'">
		<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		<TargetPath>TestIdlCdrWrapper.dll</TargetPath>
	</ContentWithTargetPath>

	<NativeWrapperLinux Include="$(IntermediateOutputPath)NativeProject\libTestIdlCdrWrapper.so" Visible="false" />
	<ContentWithTargetPath Include="@(NativeWrapperLinux)" Visible="false" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
		<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		<TargetPath>libTestIdlCdrWrapper.so</TargetPath>
	</ContentWithTargetPath>

	<NativeWrapperOSX Include="$(IntermediateOutputPath)NativeProject\libTestIdlCdrWrapper.dylib" Visible="false" />
	<ContentWithTargetPath Include="@(NativeWrapperOSX)" Visible="false" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
		<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
		<TargetPath>libTestIdlCdrWrapper.dylib</TargetPath>
	</ContentWithTargetPath>
  </ItemGroup>
</Project>
